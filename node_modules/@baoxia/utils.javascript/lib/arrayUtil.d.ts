export declare class ArrayUtil {
    static get Empty(): never[];
    /**
     * 判断指定的数组，是否为“null”，或“空数组”。
     * @param str 指定的数组对象。
     * @returns 如果指定的数组对象为“null”，或“空数组”，则返回：true，否则返回：false。
     */
    static isEmpty(items: Array<any> | null): boolean;
    /**
     * 判断指定的数组，是否不为“null”，或“空数组”。
     * @param str 指定的数组对象。
     * @returns 如果指定的数组对象不为“null”，或“空数组”，则返回：true，否则返回：false。
     */
    static isNotEmpty(items: Array<any> | null): boolean;
    /**
     * 获取数组中的第一个元素。
     * @param items 指定的数组。
     * @returns 返回数组中的第一个元素。
     */
    static firstItemOf(items: Array<any>): any;
    /**
     * 获取数组中的最后一个元素。
     * @param items 指定的数组。
     * @returns 返回数组中的最后一个元素。
     */
    static lastItemOf(items: Array<any>): any;
    /**
     * 添加元素到指定的数组对象。
     * @param items 指定的数组对象。
     * @param item 要添加的元素。
     * @returns 返回已添加的元素。
     */
    static addItemTo(items: Array<any>, item: any): any;
    /**
     * 在指定数组的指定位置上插入新的数组元素。
     * @param items 指定的数组对象。
     * @param insertIndex 要插入新元素的索引值。
     * @param newItems 要插入的新元素数组对象。
     * @returns 返回已插入的新元素数组。
     */
    static insertItemsTo(items: Array<any>, insertIndex: number, newItems: Array<any>): Array<any>;
    /**
     * 在指定数组的指定位置上插入新的元素。
     * @param items 指定的数组对象。
     * @param insertIndex 要插入新元素的索引值。
     * @param newItems 要插入的新元素对象。
     * @returns 返回已插入的新元素对象。
     */
    static insertItemTo(items: Array<any>, insertIndex: number, newItem: any): any;
    /**
     * 移除指定数组内，指定范围内的元素。
     * @param items 指定的数组对象。
     * @param removeRangeBeginIndex 指定范围的起始元素索引值。
     * @param removeItemsCount 要移除范围的元素数量。
     * @returns 返回已删除的元素数组。
     */
    static removeItemsInRangeFrom(items: Array<any>, removeRangeBeginIndex: number, removeItemsCount: number): Array<any> | null;
    /**
     * 移除指定数组中指定位置上的元素。
     * @param items 指定的数组。
     * @param itemIndex 要移除元素的索引值。
     * @returns 移除成功时，返回刚刚移除的元素，否则返回：null。
     */
    static removeItemAt(items: Array<any>, itemIndex: number): any;
    /**
     * 移除指定数组中指定的元素。
     * @param items 指定的数组。
     * @param item 要移除的元素。
     * @returns item 移除成功时，返回刚刚移除的元素，否则返回：null。
     */
    static removeItemFrom(items: Array<any>, item: any): any;
    /**
     * 获取指定数组指定范围内的元素数组。
     * @param items 指定的数组对象。
     * @param subarrayBeginIndex 指定范围的起始元素索引值。
     * @param subarrayLength 指定范围的元素数量。
     * @returns 返回指定数组指定范围内的元素数组。
     */
    static subarrayInRangeFrom(items: Array<any>, subarrayBeginIndex: number, subarrayLength: number): Array<any> | null;
    /**
     * 清空指定数组中的全部元素。
     * @param items 要清空元素的指定数组对象。
     * @returns items 已被移除的元素数组对象。
     */
    static clearItems(items: Array<any>): Array<any>;
    /**
     * 枚举二维数组中的所有元素的组合。
     * @param toReceiveItems 接收当前所有元素的一种组合。
     * @param itemArrays 要进行枚举的二维元素数组。
     */
    static enumerateItemInItemArraysTo(toReceiveItems: (items: any[]) => void, ...itemArrays: any[][]): void;
}
//# sourceMappingURL=arrayUtil.d.ts.map