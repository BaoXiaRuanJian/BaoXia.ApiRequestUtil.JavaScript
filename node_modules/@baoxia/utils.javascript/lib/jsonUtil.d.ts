export declare class JsonUtil {
    /**
     * 解析指定的 JSON 字符串，注意。
     * @param {string} json 要进行解析的 JSON 字符串。
     * @returns {(ObjectType | null)} 解析后的对象，【注意】返回的模型对象，只包含对应的键值，不包含相关类型方法。
     */
    static parse<ObjectType>(json: string | null): ObjectType | null;
    /**
     * 解析指定的 JSON 字符串，或转换模型对象的值到BaoXia工具集的模型。
     * @param json 指定的JSON字符串或模型对象。
     * @returns 返回解析后的对象，或转换属性值为BaoXia工具集模型后的对象。
     */
    static parseOrConvertValue<ObjectType>(jsonOrObject: string | object | null): ObjectType | null;
    /**
     *  序列化指定的对象。
     * @param {*} object 要进行序列化的对象。
     * @returns {(string | null)} 指定对象序列化后的字符串。
     *
     * @memberOf JsonUtil
     */
    static stringify(object: any): string | null;
}
//# sourceMappingURL=jsonUtil.d.ts.map