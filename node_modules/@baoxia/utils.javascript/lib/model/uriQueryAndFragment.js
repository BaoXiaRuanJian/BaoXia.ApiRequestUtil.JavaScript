import { StringUtil } from "../stringUtil.js";
import { UriPathDelimiter } from "../constant/uriPathDelimiter.js";
/**
 * Uri查询参数和锚点部分。
 */
export class UriQueryAndFragment {
    get beginCharIndex() {
        let beginCharIndex = -1;
        if (this.queryBeginCharIndex >= 0
            && (this.fragmentBeginCharIndex < 0
                || this.fragmentBeginCharIndex >= this.queryBeginCharIndex)) {
            beginCharIndex
                = this.queryBeginCharIndex
                    + (this.isIncludeDelimiter
                        ? 0
                        : UriPathDelimiter.PathToQuery.length);
        }
        else if (this.fragmentBeginCharIndex >= 0
            && (this.queryBeginCharIndex < 0
                || this.queryBeginCharIndex >= this.queryBeginCharIndex)) {
            beginCharIndex
                = this.fragmentBeginCharIndex
                    + (this.isIncludeDelimiter
                        ? 0
                        : UriPathDelimiter.QueryParamToFragment.length);
        }
        return beginCharIndex;
    }
    ////////////////////////////////////////////////
    // @自身实现
    ////////////////////////////////////////////////
    constructor(query = StringUtil.Empty, queryBeginCharIndex = -1, fragment = StringUtil.Empty, fragmentBeginCharIndex = -1, isIncludeDelimiter = true, length = 0) {
        ////////////////////////////////////////////////
        // @自身属性
        ////////////////////////////////////////////////
        this.query = StringUtil.Empty;
        this.queryBeginCharIndex = -1;
        this.fragment = StringUtil.Empty;
        this.fragmentBeginCharIndex = -1;
        this.isIncludeDelimiter = true;
        this.query = query;
        this.queryBeginCharIndex = queryBeginCharIndex;
        this.fragment = fragment;
        this.fragmentBeginCharIndex = fragmentBeginCharIndex;
        this.isIncludeDelimiter = isIncludeDelimiter;
        this.length = length;
    }
}
