import { ThenableState } from "./constant/thenableState.js";
////////////////////////////////////////////////
// @ThenableState
////////////////////////////////////////////////
export class Thenable {
    constructor() {
        ////////////////////////////////////////////////
        // @自身属性
        ////////////////////////////////////////////////
        this._state = ThenableState.Working;
        this._callback = null;
        this.error = null;
        this.callbackParam = null;
    }
    ////////////////////////////////////////////////
    // @自身实现
    ////////////////////////////////////////////////
    tryInvokeThenable() {
        if (this._state != ThenableState.WorkFinished) {
            return;
        }
        // !!!
        this._state = ThenableState.Thenableed;
        // !!!
        let callback = this._callback;
        if (callback != null) {
            callback(this.error, this.callbackParam);
        }
    }
    setResult(error, callbackParam) {
        if (this._state != ThenableState.Working) {
            return;
        }
        // !!!
        this._state = ThenableState.WorkFinished;
        // !!!
        this.error = error;
        if (typeof callbackParam == 'undefined') {
            callbackParam = null;
        }
        this.callbackParam = callbackParam;
        // !!!
        this.tryInvokeThenable();
        // !!!
    }
    then(callback) {
        this._callback = callback;
        // !!!
        this.tryInvokeThenable();
        // !!!
    }
}
